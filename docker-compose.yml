version: '3.8'

services:

  postgres:
    image: postgres:latest
    container_name: postgres_chytozavryk
    ports:
      - $SQL_PORT:5432
    environment:
      - POSTGRES_USER=$SQL_USER
      - POSTGRES_PASSWORD=$SQL_PASSWORD
      - POSTGRES_DB=$SQL_DATABASE
    volumes:
      - postgres_chytozavryk:/data
    restart: always
    networks:
      - chytozavryk

  redis:
    container_name: redis_chytozavryk
    image: redis:7.2.3
    ports:
      - $REDIS_PORT:6379
    command: redis-server --port $REDIS_PORT --requirepass $REDIS_PASSWORD --maxmemory 100mb
    volumes:
      - redis_chytozavryk:/data
    restart: always
    networks:
      - chytozavryk

  backend_app:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend_app_chytozavryk
    ports:
      - $BACKEND_PORT:8000
    command: [ 'bash', 'scripts/backend_app.sh' ]
    volumes:
      - backend_app_chytozavryk:/data
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - chytozavryk

  frontend_app:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend_app_chytozavryk
    ports:
      - $FRONTEND_PORT:3000
    depends_on:
      - backend_app
    restart: always
    networks:
      - chytozavryk

networks:
  chytozavryk:
    driver: bridge

volumes:
  postgres_chytozavryk:
  redis_chytozavryk:
  backend_app_chytozavryk:
  proxy_chytozavryk:
  frontend_app_chytozavryk: